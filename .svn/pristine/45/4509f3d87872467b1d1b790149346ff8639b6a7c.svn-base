<template>
  <div class="bigBox">
    <div class="header">
      <span>小组详情</span>
      <el-button type="primary" size="small" @click="back()">返回</el-button>
    </div>
    <div class="groupPerson">
      <div class="bigTitle">{{ group.groupName }}
        <i class="el-icon-edit-outline" @click="edit()"></i>
      </div>
      <div class="groupTitle"><span>小组描述</span></div>
       <div class="groupCentant">{{ group.description }} </div>
       <div class="groupTitle"><span>创建人</span></div>
       <div class="personPic">
         <img src="../../images/bg@2x.png">
         <div class="wd" style="margin-left:10px">
           <div class="writer" style="font-size:15px">{{ group.realName }}</div>
          <div class="writerDetail" style="font-size:12px">{{ group.department }}</div>
         </div>
       </div>
       <div class="mTop" style="margin-left:10px;">{{ group.createTime }}</div>
    </div>
    <div class="nav">
      <div class="groupTitle"><span>成员列表</span></div>
      <div class="button_btn mTop">
        <el-button type="primary" size="small" @click="addUser()">添加</el-button>
        <el-button type="primary" size="small">提交</el-button>
        <el-button type="primary" size="small">导出Excel</el-button>
        <el-button type="primary" size="small">下载Excel模板</el-button>
      </div>
      <el-table
      class="mTop"
        :data="group.groupUser"
        style="width:980px;box-sizing:border-box;padding:0 5px;"
        :row-style="tableRowStyle"
        header-row-class-name="center"
        :header-cell-style="{background:'rgba(66,172,254,1)',width:'980px',height:'55px','text-align':'center'}">
        <el-table-column
          label="小组名称"
          prop="name"
          width="180">
          <!-- <template slot-scope="scope">
            <span style="margin-left: 10px" >{{ scope.row.date }}</span>
          </template> -->
        </el-table-column>
        <el-table-column
          label="小组创建人"
          prop="realName"
          width="180">
          <!-- <template slot-scope="scope">
              <div slot="reference" class="name-wrapper">
                <el-tag size="medium">{{ scope.row.name }}</el-tag>
              </div>
          </template> -->
        </el-table-column>
        <el-table-column label="操作">
          <template slot-scope="scope">

            <el-button
              size="mini"
              type="primary"
              @click="handleDelete(scope.$index, scope.row)">删除</el-button>
          </template>
        </el-table-column>
      </el-table>

    </div>
      <div class="block mt mTop">
        <el-pagination
          @size-change="handleSizeChange"
          @current-change="handleCurrentChange"
          :current-page="currentPage4"
          :page-sizes="[100, 200, 300, 400]"
          :page-size="100"
          layout="total, sizes, prev, pager, next, jumper"
          :total="400">
        </el-pagination>
      </div>
      <!-- 详情弹窗 -->
      <el-dialog title="" :visible.sync="dialogFormVisible">
        <el-form :model="formEdit">
          <el-form-item label="修改小组名称" :label-width="formLabelWidth">
            <el-input v-model="formEdit.name" autocomplete="off"></el-input>
          </el-form-item>
          <el-form-item label="修改小组描述" :label-width="formLabelWidth">
            <el-input v-model="formEdit.content" autocomplete="off"></el-input>
          </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button @click="dialogFormVisible = false">取 消</el-button>
          <el-button type="primary" @click="commitEdit()">确 定</el-button>
        </div>
      </el-dialog>

      <!-- 添加成员 -->
      <!-- <el-dialog title="" :visible.sync="dialogFormVisibleAdd">
        <el-form :model="formAdd">
          <el-form-item label="修改小组名称" :label-width="formLabelWidth">
            <el-input v-model="formAdd.userId" autocomplete="off"></el-input>
          </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button @click="dialogFormVisibleAdd = false">取 消</el-button>
          <el-button type="primary" @click="dialogFormVisibleAdd = true">确 定</el-button>
        </div>
      </el-dialog> -->
          <el-dialog
            title="添加成员"
            :visible.sync="dialogVisible1"
            >
          <div class="treeBox">
            <div class="leftTree">
              <el-tree
                :data="data4"
                show-checkbox
                node-key="id"
                :props="prop9"
                :expand-on-click-node="false"
                :default-checked-keys="seltedRights"
                @check-change="check_right_change"
                ref="tree"
                >
              </el-tree>
              <div class="rightTree">
                <!-- <el-checkbox-group >
                <el-checkbox :label="复选框A"></el-checkbox>
              </el-checkbox-group> -->
              <ul v-for="(item,index) in checkList" :key="index">
                <li>
                  <el-checkbox :label="item.name" ></el-checkbox>
                </li>
              </ul>
              
              </div>
              <div class="rightTree">
                <ul v-for="(cols,col) in checkListUser" :key="col">
                <li>
                  <el-checkbox :label="cols.name" @change="delId(cols.id,cols)"></el-checkbox>
                </li>
              </ul>
              </div>
            </div>
          </div>
        <el-button type="primary" size="small" @click="commitAdd()" >提交</el-button>

          </el-dialog>
  </div>
</template>
<script>
import {groupDetails,addGroupUser,editGroup,deleteGroupUser,getDepartment} from '@/utils/axios/axios'
export default {
  data () {
    const data4 = [];
    return {
      tableData: [],
      data4: JSON.parse(JSON.stringify(data4)),
      prop9: {
        value: 'id',
        children: 'children',
        label: 'name'
      }, 
      seltedRights:[],     
      currentPage4: 4,
      dialogFormVisible: false,
      formEdit: {
        name: '',
        date1: '',
        date2: '',
        delivery: false,
        type: [],
        resource: '',
        desc: '',
        content: ''
      },
      dialogFormVisibleAdd:false,
      formAdd: {
        userId:''
      },
      formLabelWidth: '120px',
      group:[],
      dialogVisible1:false,
      checkList :[],
      checkListUser:[],
      departmentId:'',
      userIds:''
    }
  },
  methods: {
    handleDelete (index, row) {
      console.log(index, row)
      let params ={
        sessionId:localStorage.getItem('sessionId'),
        groupId:this.$route.query.groupId,
        groupUserId:row.id   
      }
      deleteGroupUser(  this.$qs.stringify(params) ).then(res=>{
        console.log(res);
        if (res.code ===1) {
            this.$message({
            message: res.desc,
            type: 'success'
          });
          this.init()
        }
      })
    },
        // 选中标签
    check_right_change() {
      this.checkList =[]
      this.checkListUser=[]
      // getCheckedNodes(leafOnly, includeHalfChecked){
      // console.log(43333333333,leafOnly, includeHalfChecked);
      // } 
      // let arr = []
      var arr = this.$refs.tree.getCheckedNodes( ) 
      console.log(arr,'数组' );
        for ( let item of arr ) {
          console.log(item,'区分');
          if(item.series) {            
            this.checkList.push(item)
            let newArr = []
            for( let itemNew of this.checkList) {
              newArr.push(itemNew.id)
              this.checkList = [...new Set(this.checkList)] 
            }
            this.departmentId = newArr.join(',')
            console.log('部门',this.departmentId);
          } else if (item.account) {
            this.checkListUser.push(item)
            let userArr = []
            for(let itemUser of this.checkListUser) {
              userArr.push(itemUser.id)
              this.checkListUser = [...new Set(this.checkListUser)] 
            }
            this.userIds = userArr.join(',')
            console.log('用户',this.userIds);
          }          
        } 
    },
    handleSizeChange (val) {
      console.log(`每页 ${val} 条`)
    },
    handleCurrentChange (val) {
      console.log(`当前页: ${val}`)
    },
    tableRowStyle ({ row, rowIndex }) {
      return 'background-color: #F2F9FF'
    },
    back () {
      this.$router.go(-1)
    },
    // 添加成员
    addUser() {
      this.dialogVisible1 = true
      
          let params ={
            sessionId:localStorage.getItem('sessionId'),
          }
      getDepartment( this.$qs.stringify(params) ).then(res=>{
        console.log(res,'部门');
        if ( res.code === 1){
          this.data4 = res.data
          console.log(this.data4,'集团');                   
        }   
      })
    },
    // 提交编辑
    commitEdit () {
      console.log(this.form.name, this.form.content, '小组信息')
      this.dialogFormVisible = false
      this.form.name = ''
      this.form.content = ''
    },
    init () {
      let params = {
        sessionId:localStorage.getItem('sessionId'),
        groupId:this.$route.query.groupId
      }
      groupDetails( this.$qs.stringify(params) ).then(res=>{
        if (res.code  ===1) {
          this.group = res.data
          console.log(this.group,'');
          
        }
  
      })
    },
        // 编辑详情
    edit () {

      this.dialogFormVisible = true
    },
    commitEdit () {
      let params = {
        sessionId:localStorage.getItem('sessionId'),
        groupId:this.$route.query.groupId,
        groupName:this.formEdit.name,
        description:this.formEdit.content
      }
      editGroup( this.$qs.stringify(params) ).then(res=>{
        // console.log(res,'修改小组');
        if (res.code === 1) {
          this.dialogFormVisible = false
          this.init()
        }
      })
      
    },
    commitAdd () {
      let params = {
        sessionId:localStorage.getItem('sessionId'),
        groupId:this.$route.query.groupId,
        userIds:this.userIds
      }
      addGroupUser( this.$qs.stringify(params)  ).then(res=> {
        console.log(res,'添加用户');
        if (res.code ===1) {
          this.dialogVisible1 = false
          this.init()
        }
      })
    }
  },
  mounted () {
    console.log(this.$route.query,'路由参数');
    this.init()
  }
}
</script>
<style lang="scss" scoped>
li {
  list-style: none
}
.bigBox{
  background-color: #F2F9FF;
  width: 100%;
  height: 100%;
  min-height: 750px;
  margin-bottom: 50px;
  box-sizing: border-box;
}
.bigTitle {
  // width:144px;
  height:23px;
  font-size:24px;
  font-family:MicrosoftYaHei;
  font-weight:400;
  color:rgba(35,35,35,1);
  line-height:0px;
  margin-left: 7px;
}
.header {
  display: flex;
  justify-content: space-between;
  padding: 10px;
}
.header span {
  font-size: 18px
}
.groupPerson {
  width:950px;
  height:330px;
  background:rgba(255,255,255,1);
  margin: 0 auto;
  text-align: left;
  padding-top: 10px;
  padding-left: 10px
}
.groupTitle {
  margin-top: 10px;
  border-left: 3px solid #7C72CB;
  font-size: 17px;
  line-height: 30px;
   margin-left: 10px;
}
.groupTitle span {
  margin-left: 10px
}
.groupCentant {
  margin-top: 10px;
  margin-left: 10px;
  font-size: 17px;
}
.personPic {
  margin-top: 10px;
  display: flex;
  justify-content: flex-start;
  margin-left: 10px;
}
.personPic  img{
  width:51px;
  height:51px;
  border-radius:26px;
  overflow: hidden;
}
.mTop {
  margin-top: 15px;
}
.button_btn {
  display: flex;
  justify-content: flex-start;
  margin-left: 10px;
}
.nav {
  text-align: left;
  padding-top: 10px;
  padding-left: 10px
}
.dfCenter {
  display: flex;
  justify-content: center
}
  .rightTree {
    text-align: left;
    border: 1px solid #000;
  }
</style>
<style>
/* 表格内容样式  自定义组件样式*/
  .cell{
    text-align: center !important;
    /* color: red; */
  }
</style>
