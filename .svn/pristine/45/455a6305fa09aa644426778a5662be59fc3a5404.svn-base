<template>
  <div class="RankingTrend">
    <ul class="navTitle">
      <li><router-link to="/MyPoints">月积分</router-link></li>
      <li><router-link to="/AccumulativeIntegral">累计积分</router-link></li>
      <li><router-link to="/IntegralTrend">积分趋势</router-link></li>
      <li class="active"><router-link to="/RankingTrend">排名趋势</router-link></li>
      <li style="float: right !important;cursor: pointer;" @click="setSortType"><img src="./img/my_icon_sz@2x.png"></li>
    </ul>
    <div class="divBox">
      <div id="echartContainer" style="width:932px; height:604px"></div>
    </div>
    <el-dialog title="设置默认排名范围" :visible.sync="dialogVisible" width="20%" :center='true'>
        <template>
          <el-radio v-model="radio" :label="item.id" :key="index" v-for="(item,index) in rangeList">{{item.name}}</el-radio>
        </template>
        <span slot="footer" class="dialog-footer">
          <el-button @click="dialogVisible = false">取 消</el-button>
          <el-button type="primary" @click="dialogVisible1=true,dialogVisible=false">确 定</el-button>
        </span>
    </el-dialog>
    <el-dialog title="设置默认排名范围" :visible.sync="dialogVisible1" width="20%" :center='true'>
        <el-row>
          <el-col :span="12"><el-radio v-model="radio1" :label="0">按小组名排</el-radio></el-col>
          <el-col :span="12"><el-radio v-model="radio1" :label="1">按部门排</el-radio></el-col>
          <el-col :span="12"><el-radio v-model="radio1" :label="2">按子公司排</el-radio></el-col>
          <el-col :span="12"><el-radio v-model="radio1" :label="3">按公司排</el-radio></el-col>
        </el-row>
        <span slot="footer" class="dialog-footer">
          <el-button @click="dialogVisible1 = false">取 消</el-button>
          <el-button type="primary" @click="setRange">确 定</el-button>
        </span>
    </el-dialog>
  </div>
</template>
<script>
import { transformRequestFn } from '@/utils/transformRequestFn/transformRequestFn'
export default {
  name: 'RankingTrend',
  data () {
    return {
      radio: -1,
      radio1: '',
      xAxisList: [],
      yAxisList: [],
      dialogVisible: false,
      dialogVisible1: false,
      rangeList: []
    }
  },
  methods: {
    setRange () {
      this.$axios({
        url: 'sort/setSortType',
        method: 'POST',
        data: {
          sessionId: this.$cookie.get('sessionId'),
          id: this.radio,
          type: this.radio1
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          this.$message({
            type: 'success',
            message: res.data.desc
          })
          this.dialogVisible1 = false
        }
      })
    },
    setSortType() {
      this.dialogVisible = true
    },
    getScoreType () {
      this.$axios({
        url: 'sort/getSortRange',
        method: 'POST',
        data: {
          sessionId: this.$cookie.get('sessionId')
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          this.rangeList.push(
            {name: res.data.data.business.businessName, id: res.data.data.business.businessId},
            {name: res.data.data.company.companyName, id: res.data.data.company.companyId},
            {name: res.data.data.department.departmentName, id: res.data.data.department.departmentId},
            // {name: res.data.data.group.groupName, id: res.data.data.group.groupId}
          )
        }
      })
    }
  },
  mounted () {
    this.getScoreType()
    this.$axios({
      url: 'sort/sortTrend',
        method: 'POST',
        data: {
          sessionId: this.$cookie.get('sessionId')
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          for (var i = 0; i < res.data.data.list.length; i++) {
            this.xAxisList.push(res.data.data.list[i].time)
            this.yAxisList.push(res.data.data.list[i].value)
          }
          var myChart = this.$echarts.init(document.getElementById('echartContainer'))
          // 绘制图表
          myChart.setOption({
            title: { text: '当月积分：'+res.data.data.sort+'分' },
            xAxis: {
              type: 'category',
              data: this.xAxisList
            },
            yAxis: {
              type: 'value'
            },
            dataZoom: [{
              type: 'inside',
              start: 0,
              end: 100
            }, {
              start: 0,
              end: 100,
              handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
              handleSize: '80%',
              handleStyle: {
                color: '#fff',
                shadowBlur: 3,
                shadowColor: 'rgba(0, 0, 0, 0.6)',
                shadowOffsetX: 2,
                shadowOffsetY: 2
              }
            }],
            series: [{
              data: this.yAxisList,
              type: 'line',
              smooth: true
            }]
          })
        }
      })
  }
}
</script>

<style scoped>
.navTitle {
  list-style: none;
  margin: 0;
  padding: 12px 0 0 0;
  display: inline-block;
  width: 100%;
  background-color: white;
}
.navTitle li{
  list-style: none;
  margin: 0;
  float: left;
  padding: 1px 30px 1px 30px;
  margin-bottom: 13px;
  border-right: 1px solid #ABABAB;
  font-size:18px;
  font-family:MicrosoftYaHei;
  font-weight:400;
  color:rgba(38,45,57,1);
}
.navTitle a{
  text-decoration:none;
  color:rgba(21,21,21,1);
}
.navTitle .active a{
  color:rgba(0,131,255,1) !important;
}
.divBox {
  padding: 20px 18px 28px 19px;
}
#echartContainer {
  margin: 0 auto;
}
</style>
