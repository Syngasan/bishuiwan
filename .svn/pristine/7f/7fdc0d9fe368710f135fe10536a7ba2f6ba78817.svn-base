<template>
  <div class="drafts">
    <ul class="navTitle">
      <li><router-link to="/WebEntry">网页录入</router-link></li>
      <li><router-link to="/tableEntry">表格录入</router-link></li>
      <li><router-link to="/Submission">已提交</router-link></li>
      <li class="active"><router-link to="/drafts">草稿箱</router-link></li>
    </ul>
    <el-table :data="tableData" stripe>
      <el-table-column align="center" prop="businessId" label="序号" type="index" :index="indexMethod"></el-table-column>
      <el-table-column align="center" prop="title" label="事件主题">
          <template slot-scope="scope">
            <span class="url" @click="pageTo('/WebEntry', {id: scope.row.id})">{{scope.row.title}}</span>
            <!-- <router-link :to="'/WebEntry/'+">{{scope.row.title}}</router-link> -->
          </template>
      </el-table-column>
      <el-table-column align="center" prop="happenTime" label="奖扣日期"></el-table-column>
      <el-table-column align="center" prop="value" label="奖/扣分值">
        <template  slot-scope="scope">
            <span>{{scope.row.rewardValue}}/{{scope.row.reduceValue}}</span>
        </template>
      </el-table-column>
      <el-table-column align="center" prop="firstExamineUserName" label="初审人"></el-table-column>
      <el-table-column align="center" prop="secondExamineUserName" label="终审人"></el-table-column>
      <el-table-column align="center" prop="recordName" label="记录人"></el-table-column>
      <el-table-column align="center" prop="createTime" label="更新时间"></el-table-column>
      <el-table-column align="center" prop="state" label="状态">
        <template  slot-scope="scope">
          <span v-if="scope.row.state == 0">拟稿</span>
          <span v-else-if="scope.row.state == 1">待初审</span>
          <span v-else-if="scope.row.state == 2">待终审</span>
          <span v-else-if="scope.row.state == 3">审核通过</span>
        </template>
      </el-table-column>
      <el-table-column align="center" prop="date" label="操作">
        <template slot-scope="scope">
          <el-button type="primary" size="mini" @click="handleEdit(scope.$index, scope.row)">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="pageNumber" :page-sizes="[10, 20, 30, 40]" :page-size="pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total">
    </el-pagination>
  </div>
</template>

<script>import { Message } from 'element-ui'
import { transformRequestFn } from '@/utils/transformRequestFn/transformRequestFn'
export default {
  name: 'drafts',
  data () {
    return {
      tableData: [],
      pageNumber: 1,
      pageSize: 10,
      total: 0
    }
  },
  created () {
    this.getList()
  },
  methods: {
    pageTo(url, params) {
      this.$router.push({path: url, query: params})
    },
    indexMethod(index) {
      return index + 1
    },
    getList () {
      this.$axios({
        url: 'eventTitle/getDraftEvent',
        method: 'POST',
        data: {
          sessionId: localStorage.getItem('sessionId'),
          pageNumber: this.pageNumber,
          pageSize: this.pageSize
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          console.log(res)
          this.total = res.data.data.totalRow
          this.tableData = res.data.data.list
        }
      })
    },
    handleEdit (index, row) {
      console.log(index, row)
      this.$alert(' 确认删除',  {
          confirmButtonText: '确定',
          callback: action => {
            // this.$message({
            //   type: 'info',
            //   message: `action: ${ action }`,
            //   center: true
            // });
            this.$axios({
        url: 'eventTitle/delDraftEvent',
        method: 'POST',
        data: {
          sessionId: localStorage.getItem('sessionId'),id: row.id
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          Message.success({
    message: res.data.desc,
    customClass: 'messageClass',
    center: true
  })
  setTimeout(() => {
    this.tableData.splice(index, 1)
    // this.$router.go(0)
  }, 1500)
        }
      })
        }
      });
    },
    handleSizeChange(val) {
      this.pageSize = val
      this.getList()
    },
    handleCurrentChange(val) {
      this.pageNumber = val
      this.getList()
    }
  }
}
</script>

<style scoped>
ul, li {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*.JumpEvent {
  text-decoration:none;
}*/
span.url {
  color: rgba(0,131,255,1);
}
span.url:hover {
  cursor: pointer;
}
.EventTitle {
  text-decoration: none;
  color: #606266;
}
.navTitle {
  display: inline-block;
  width: 100%;
  background-color: white;
  padding-top: 12px;
}
.navTitle li{
  float: left;
  padding: 1px 30px 1px 30px;
  margin-bottom: 13px;
  border-right: 1px solid #ABABAB;
  font-size:18px;
  font-family:MicrosoftYaHei;
  font-weight:400;
  color:rgba(38,45,57,1);
}
.navTitle a{
  text-decoration:none;
  color:rgba(21,21,21,1);
}
.navTitle .active a{
  color:rgba(0,131,255,1) !important;
}
.el-table {
  margin-top: 19px;
}
.el-pagination {
  margin-top: 43px;
  text-align: center;
  margin-bottom: 20px;
}
</style>
