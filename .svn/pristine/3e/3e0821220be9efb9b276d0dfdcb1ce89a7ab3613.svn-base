<template>
<div class="DetailsOfTheEvent">
  <div class="title"><span>事项详情</span>
    <el-button @click="routerBack" class="backBtn" type="primary">返回</el-button>
  </div>
  <div class="EventBox" v-for="(item,index) in list.eventList">
    <div class="EventBoxIndex">{{index}}</div>
    <div class="EventBoxImg"><img src="./img/csth_pic_gray@2X.png"></div>
    <div class="eventName">{{item.eventTypeName}}</div>
    <div class="event">事件内容：</div>
    <div class="eventTips">{{item.content}}</div>
    <div class="eventDesc">{{item.remark}}</div>
    <div class="event">奖扣对象：</div>
    <el-row>
      <el-col :key="this" :span="8" class="objectList" v-for="(items,index) in item.eventUserList">
        <div class="objectListBox">
          <img class="logo" :src="items.head">
          <div class="objectListBoxName">
            <div class="objectListBoxNameTop">{{items.name}}</div>
            <div class="objectListBoxNameBottom">{{items.department}}</div>
          </div>
          <div class="objectListBoxNum"><span>{{items.value}}</span>分</div>
        </div>
      </el-col>
    </el-row>
  </div>
  <div class="textCen">
    <el-button class="btn" type="primary" @click="eventTitle">同意</el-button>
    <el-button class="btn" type="primary" @click="togglePopup()">退回</el-button>
  </div>
  <div class="popup-mark" v-show="showPopup">
    <div class="popup-body">
      <div class="title">请填写退回意见</div>
      <div class="select-box">
        <span><i class="select-icon" @click="selectState(2)"><i class="active" :style="{display: exitStateCode === 2 ? 'block' : 'none' }"></i></i>退回至"拟稿"步骤</span>
        <span><i class="select-icon" @click="selectState(3)"><i class="active" :style="{display: exitStateCode === 3 ? 'block' : 'none' }"></i></i>退回至"初审"步骤</span>
      </div>
      <textarea placeholder="请输入退回意见" v-model="opinion"></textarea>
      <div class="footer">
        <button class="cancel" @click="togglePopup()">取消</button>
        <button class="ok" @click="eventBack()">确认</button>
      </div>
    </div>
  </div>
</div>
</template>

<script>
import {
  Message
} from 'element-ui'
import {
  transformRequestFn
} from '@/utils/transformRequestFn/transformRequestFn'
export default {
  name: 'DetailsOfTheEvent',
  data() {
    return {
      list: '',
      showPopup: false,
      exitStateCode: 2,
      opinion: ''
    }
  },
  created() {
    this.getList()
  },
  methods: {
    getList() {
      this.$axios({
        url: 'eventTitle/getExamineEventTitle',
        method: 'POST',
        data: {
          sessionId: this.$cookie.get('sessionId'),
          id: this.$route.params.id
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          this.list = res.data.data
          console.log(res)
        }
      })
    },
    togglePopup() {
      if (this.$route.params.state == '1') {
        this.$prompt('请填写退回意见：', ' ', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
        }).then(({
          value
        }) => {
          let dataList = []
          let data = {}
          this.list.eventList.forEach(item => {
            data.id = item.id
            data.type = item.type
            data.userList = []
            item.eventUserList.forEach(userItem => {
              data.userList.push({
                userId: userItem.userId,
                value: userItem.value
              })
            })
          })
          dataList.push(data)
          data = {}
          this.$axios({
            url: 'eventTitle/examineFirst',
            method: 'POST',
            data: {
              firstExamineReason: value,
              firstExamineState: 1,
              sessionId: this.$cookie.get('sessionId'),
              id: this.$route.params.id,
              jsonData: JSON.stringify(dataList)
            },
            transformRequest: transformRequestFn
          }).then((res) => {
            if (res.data.code === 1) {
              Message.success({
                message: '退回成功！',
                customClass: 'messageClass',
                center: true
              })
              setTimeout(() => {
                this.$router.back(-1)
              }, 2000)
            }
          })
        })
      } else if (this.$route.params.state == '2') {
        this.showPopup = !this.showPopup
      }
    },
    routerBack() {
      this.$router.back(-1)
    },
    eventTitle() {
      this.$prompt('请填写审核意见：', '', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
      }).then(({
        value
      }) => {
        console.log(value)
        if (!value) {
          Message.error({
            message: '请填写审核意见',
            customClass: 'messageClass',
            center: true
          })
          return
        }
        let dataList = []
        let data = {}
        this.list.eventList.forEach(item => {
          data.id = item.id
          data.type = item.type
          data.userList = []
          item.eventUserList.forEach(userItem => {
            data.userList.push({
              userId: userItem.userId,
              value: userItem.value
            })
          })
          dataList.push(data)
          data = {}
        })
        console.log(dataList);
        console.log("我直行了");
        if (this.$route.params.state == '1') {
          this.$axios({
            url: 'eventTitle/examineFirst',
            method: 'POST',
            data: {
              firstExamineReason: value,
              firstExamineState: 1,
              sessionId: this.$cookie.get('sessionId'),
              id: this.$route.params.id,
              jsonData: JSON.stringify(dataList)
            },
            transformRequest: transformRequestFn
          }).then((res) => {
            if (res.data.code === 1) {
              Message.success({
                message: '审核成功！',
                customClass: 'messageClass',
                center: true
              })
              setTimeout(() => {
                this.$router.back(-1)
              }, 2000)
            }
          })
        } else if (this.$route.params.state == '2') {
          this.$axios({
            url: 'eventTitle/examineSecond',
            method: 'POST',
            data: {
              secondExamineReason: value,
              secondExamineState: 1,
              sessionId: this.$cookie.get('sessionId'),
              id: this.$route.params.id,
              jsonData: JSON.stringify(dataList)
            },
            transformRequest: transformRequestFn
          }).then((res) => {
            if (res.data.code === 1) {
              Message.success({
                message: '审核成功！',
                customClass: 'messageClass',
                center: true
              })
              setTimeout(() => {
                this.$router.back(-1)
              }, 2000)
            }
          })
        }
      }).catch(() => {});
    },
    eventBack() {
      let dataList = []
      let data = {}
      this.list.eventList.forEach(item => {
        data.id = item.id
        data.type = item.type
        data.userList = []
        item.eventUserList.forEach(userItem => {
          data.userList.push({
            userId: userItem.userId,
            value: userItem.value
          })
        })
        dataList.push(data)
        data = {}
      })
      this.$axios({
        url: 'eventTitle/examineSecond',
        method: 'POST',
        data: {
          secondExamineReason: this.opinion,
          secondExamineState: this.exitStateCode,
          sessionId: this.$cookie.get('sessionId'),
          id: this.$route.params.id,
          jsonData: JSON.stringify(dataList)
        },
        transformRequest: transformRequestFn
      }).then((res) => {
        if (res.data.code === 1) {
          Message.success({
            message: '退回成功！',
            customClass: 'messageClass',
            center: true
          })
          this.showPopup = false
          this.opinion = ''
          setTimeout(() => {
            this.$router.back(-1)
          }, 2000)
        }
      })
    },
    selectState(code) {
      this.exitStateCode = code
    }
  }
}
</script>

<style scoped>
.MatterTitle {
  padding: 16px;
  /* background:rgba(248,249,250,1);*/
  background-color: red;
  position: relative;
}

.titleL {
  text-align: left;
  margin-left: 28X;
  width: 81px;
  height: 20px;
  font-size: 20px;
  font-family: PingFang-SC-Regular;
  font-weight: bold;
  color: rgba(0, 0, 0, 1);
  line-height: 0px;
}

.itleR {
  /*text-align: right;
  margin-left: 19px;*/
  margin: 0 100px 0 0;
}

.forBtn {
  text-align: center;
  margin-top: 20px;
  margin-bottom: 30px;
}

.DetailsOfTheEvent {
  padding: 13px 10px 19px 5px;
}

.textCen {
  margin-top: 35px;
  text-align: center;
}

.title {
  font-size: 10px;
  font-family: PingFang-SC-Regular;
  font-weight: bold;
  color: rgba(0, 0, 0, 1);
  padding-left: 9px;
  margin-bottom: 19px;
}

.title span {
  padding-top: 10px;
  display: inline-block;
}

.backBtn {
  width: 80px;
  height: 15px;
  line-height: 3px;
  float: right;
}

.EventBox {
  padding: 9px 10px;
  background: rgba(241, 245, 248, 1);
  border-radius: 2px;
  position: relative;
}

.EventBoxIndex {
  position: absolute;
  right: 10px;
  top: 10px;
  font-size: 36px;
  font-weight: bold;
}

.EventBoxImg {
  position: absolute;
  right: 60px;
  top: 14px;
}

.EventBoxImg img {
  width: 60px;
  height: 60px;
}

.eventName {
  font-size: 12px;
  font-family: PingFang-SC-Bold;
  font-weight: bold;
  color: rgba(51, 51, 51, 1);
}

.event {
  font-size: 8px;
  font-family: PingFang-SC-Bold;
  font-weight: bold;
  color: rgba(51, 51, 51, 1);
  margin-top: 9px;
  padding-left: 5px;
  border-left: 2px solid rgba(124, 113, 203, 1);
}

.eventTips {
  font-size: 8px;
  font-family: PingFang-SC-Regular;
  font-weight: 400;
  color: rgba(114, 114, 114, 1);
  margin-top: 9px;
}

.eventDesc {
  margin-top: 8px;
  padding: 3px 4px 3px 5px;
  background: rgba(238, 238, 238, 1);
  border-radius: 2px;
  font-size: 7px;
  font-family: PingFang-SC-Regular;
  font-weight: 400;
  color: rgba(153, 153, 153, 1);
}

.objectList {
  margin-top: 13px;
}

.objectListBox {
  /* width: 386px;
  height: 50px;*/
  padding: 11px 13px;
  border-radius: 5px;
  position: relative;
}

.objectList .logo {
  width: 48px;
  height: 48px;
  border-radius: 50%;
}

.objectListBoxName {
  position: absolute;
  left: 70px;
  top: 15px;
}

.objectListBoxNameTop {
  font-size: 16px;
  font-family: PingFang-SC-Medium;
  font-weight: 500;
  color: rgba(0, 0, 0, 1);
}

.objectListBoxNameBottom {
  font-size: 13px;
  font-family: PingFang-SC-Regular;
  font-weight: 400;
  color: rgba(97, 97, 97, 1);
}

.objectList .close {
  position: absolute;
  right: 10px;
  top: 24px;
  width: 27px;
  height: 27px;
}

.objectListBoxNum {
  position: absolute;
  right: 47px;
  top: 20px;
  font-size: 8px;
  font-size: 17px;
}

.objectListBoxNum .el-input-number {
  width: 150px;
}

.objectListBoxNum span {
  background: rgba(213, 213, 213, 1);
  border-radius: 1px;
  padding: 5px 13px;
  font-family: PingFang-SC-Medium;
  font-weight: 500;
  color: rgba(1, 1, 1, 1);
}

.btn {
  width: 80px;
  height: 15px;
  line-height: 3px;
}

.popup-mark {
  position: fixed;
  z-index: 5;
  width: 100%;
  height: 100%;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
}

.popup-mark .popup-body {
  position: absolute;
  left: 0;
  right: 0;
  top: 30%;
  width: 30%;
  background-color: #ffffff;
  font-size: 16px;
  display: flex;
  flex-wrap: wrap;
  margin: auto;
  padding: 30px;
  border-radius: 5px;
}

.popup-mark .popup-body .title {
  width: 100%;
  text-align: center;
  padding: 0 0 30px;
  font-size: 16px;
  font-weight: bold;
}

.popup-mark .popup-body .select-box {
  width: 100%;
  padding: 0 0 24px;
  display: flex;
  justify-content: space-between;
  font-size: 14px;
  font-weight: bold;
}

.popup-mark .popup-body .select-box span {
  flex: 1;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

.popup-mark .popup-body .select-box span i.select-icon {
  display: inline-block;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 1px solid #cccccc;
  margin-right: 7px;
  position: relative;
}

.popup-mark .popup-body .select-box span i.select-icon i.active {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  margin: auto;
  display: inline-block;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #0A8FF6;
}

.popup-mark .popup-body textarea {
  width: 100%;
  height: 100px;
  border-radius: 10px;
  background-color: #ffffff;
  color: #333333;
  padding: 14px 16px;
  margin-bottom: 40px;
  border: 1px solid #cccccc;
}

.popup-mark .popup-body textarea:placeholder {
  color: #A4A4A4
}

.popup-mark .popup-body .footer {
  width: 100%;
  display: flex;
  justify-content: center;

}

.popup-mark .popup-body .footer button {
  width: 80px;
  height: 30px;
  line-height: 30px;
  text-align: center;
  border: none;
  border-radius: 4px;
}

.popup-mark .popup-body .footer button.cancel {
  background-color: #ffffff;
  border: 1px solid #868686;
  color: #868686;
  margin-right: 28px;
}

.popup-mark .popup-body .footer button.ok {
  background-color: #0A8FF6;
  color: #ffffff;
}
</style>
